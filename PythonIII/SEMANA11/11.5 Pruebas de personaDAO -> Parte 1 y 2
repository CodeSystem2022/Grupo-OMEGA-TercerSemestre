
# 11.5 Pruebas de personaDAO -> Parte 1 y 2

#definimos los metodos de clases
@classmethod
def seleccionar(cls):
    with CursorDelPool() as cursor:
          cursor.execute(cls._SELECCIONAR)
          registros = cursor.fetchall()
          personas = []  #creamos una lista
          for registro in registros:
              persona = Persona(registro[0], registro[1], registro[2], registro[3])
              personas.append(persona)
          return personas
          
@classmethod
def insertar(cls, persona):
    with CursorDelPool() as cursor:
          valores = (persona.nombre, persona.apellido, persona.email)
          cursor.execute(cls._INSERTAR, valores)
          log.debug(f'Persona Insertada: {persona}')
          return cursor.rowcount
          
@classmethod
def actualizar(cls, persona):
    with CursorDelPool() as cursor:
          valores = (persona.nombre, persona.apellido, persona.email, persona.id_persona)
          cursor.execute(cls._ACTUALIZAR, valores)
          log.debug(f'Persona Actualizada: {persona}')
          return cursor.rowcount

@classmethod
def eliminar(cls, persona):
    with CursorDelPool() as cursor:
          valores = (persona.id_persona)
          cursor.execute(cls._ELIMINAR, valores)
          log.debug(f'Los objetos eliminados son: {persona}')
          return cursor.rowcount
          
----0------0-------0-------0-------0--------0--------0-------0------0-------0-------

# Realizamos una prueba para Insertar un registro

if __naem__ == '__main__':
    # Eliminar un registro
    # persona1 = Persona(id_persona=8)
    # personas_eliminadas = PersonaDAO.eliminar(persona1)
    # log.debug(f' Personas eliminadas: {personas_eliminadas}')

    # Actualizar un registro
    # persona1 = Persona(1, 'Juan Jose', 'Pena', 'jjpena@mail.com')
    # personas_actualizadas = PersonaDAO.actualizar(persona1)
    # log.debug(f'Personas actualizadas: {personas_actualizadas}')


    # Insertar registro
    persona1 = Persona(nombre='Marcos', apellido='Tejada', email='tejadam@mail.com')
    personas_insertadas = PersonaDAO.insertar(persona1)
    log.debug(f'Personas insertadas: {personas_insertadas}')

    # Seleccionar objetos
    personas = PersonaDAO.seleccionar()
    for persona in personas:
        log.debug(persona)

------0-----0------0------0------0------0------0-------0-------0-------0------0----

# Realizamos las pruebas para actualizar y eliminar un registro

if __naem__ == '__main__':
    # Eliminar un registro
    persona1 = Persona(id_persona=18)
    personas_eliminadas = PersonaDAO.eliminar(persona1)
    log.debug(f' Personas eliminadas: {personas_eliminadas}')

    # Actualizar un registro
    persona1 = Persona(1, 'Juan', 'Pena', 'jpena@mail.com')
    personas_actualizadas = PersonaDAO.actualizar(persona1)
    log.debug(f'Personas actualizadas: {personas_actualizadas}')


    # Insertar registro
    persona1 = Persona(nombre='Mateo', apellido='Torres', email='tmateo@mail.com')
    personas_insertadas = PersonaDAO.insertar(persona1)
    log.debug(f'Personas insertadas: {personas_insertadas}')

    # Seleccionar objetos
    personas = PersonaDAO.seleccionar()
    for persona in personas:
        log.debug(persona)
