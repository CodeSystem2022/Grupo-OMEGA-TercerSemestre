from logge_base import log


class Persona:
    def __init__(self, id_persona=None, nombre=None, apellido=None, email=None):
        self._id_persona = id_persona
        self._nombre = nombre
        self._apellido = apellido
        self._email = email

        def __str__(self):
            return f'''
            id Persona: {self._id_persona},
            Nombre: {self._nombre},
            Apellido: {self._apellido},
            Email: {self._email}
        '''

        # metodos get y set

        @property
        def id_persona(self):
            return self._id_persona

        @id_persona.setter
        def id_persona(self, id_persona):
            self._id_persona = id_persona

        @property
        def nombre(self):
            return self._nombre

        @nombre.setter
        def nombre(self, nombre):
            self._nombre = nombre

        @property
        def apellido(self):
            return self._apellido

        @apellido.setter
        def apellido(self, apellido):
            self._apellido = apellido

        @property
        def email(self):
            return self._email

        @email.setter
        def email(self, email):
            self._email = email


if __name__ == "__main__":
    persona1 = Persona(1, "Juan", "Perez", "jperez@mail.com")
    log.debug(persona1)
    persona2 = Persona(nombre="Jose", apellido="Lepe", email="ljose@mail.com")
    log.debug(persona2)
    persona1 = Persona(id_persona = 1)
    log.debug(persona1)

from capa_datos_personas.Persona import Persona
from capa_datos_personas.conexion import Conexion
from capa_datos_personas.cursor_del_pool import  Cursor_del_pool
from logge_base import log


class PersonaDAO:
    """

    DAO significa: Data Access Object
    CRUD significa:
                                Create -> Insertar
                                Read -> Seleccionar
                                Update -> Actualizar
                                Delete -> Eliminar
    """

    _SELECCIONAR = "SELECT * FROM persona ORDER BY id_persona"
    _INSERTAR = "INSERT INTO persona(nombre, apellido, email) VALUES (%s, %s, %s)"
    _ACTUALIZAR = "UPDATE persona SET nombre=%s, apellido=%s, email=%s WHERE id_persona=%s"
    _ELIMINAR = "DELETE FROM persona WHERE id_persona=%s"

    # deifinimos los metodos de clase

    @classmethod
    def seleccionar(cls):        
        with Cursor_del_pool() as cursor:
            cursor.execute(cls._SELECCIONAR)
            registros = cursor.fetchall()
            personas = []  # creamos una lista
            for registro in registros:
                persona = Persona(registro[0], registro[1], registro[2], registro[3])
                personas.append(persona)
            return personas

    @classmethod
    def insertar(cls, persona):
        with Cursor_del_pool() as cursor:
            valores = (persona.nombre, persona.apellido, persona.email)
            cursor.execute(cls._INSERTAR, valores)
            log.debug(f"Persona insertada: {persona}")
            return cursor.rowcount

    @classmethod
    def actualizar(cls, persona):
        with Cursor_del_pool() as cursor:
            valores = (persona.nombre, persona.apellido, persona.email, persona.id_persona)
            cursor.execute(cls._ACTUALIZAR, valores)
            log.debug(f"Persona actualizada {persona}")
            return cursor.rowcount

    @classmethod
    def eliminar(cls, persona):
        with Cursor_del_pool() as cursor:
            valores = (persona.id_persona,)
            cursor.execute(cls._ELIMINAR, valores)
            log.debug(f"Los objetos eliminados son: {persona}")
            return cursor.rowcount


if __name__ == "__name__":
    # eliminar un registro
    persona1 = Persona(id_persona=18)
    peronas_eliminadas = PersonaDAO.eliminar(persona1)
    log.debug(f"Personas eliminadas: {peronas_eliminadas}")

    # actualizar un registro
    persona1 = Persona(1, "Juan", "Pena", "jpena@mial.com")
    personas_actualizadas = PersonaDAO.actualizar(persona1)
    log.debug(f"Personas actualizadaas: {personas_actualizadas}")

    # instar un registro
    persona1 = Persona(nombre="Mateo", apellido="Torres", email="tmateo@mail.com")
    personas_insertadas = PersonaDAO.insertar(persona1)
    log.debug(f"Personas insertadas: {personas_insertadas}")

    # seleccionar objetos
    personas = PersonaDAO.seleccionar()
    for persona in personas:
        log.debug(persona)
